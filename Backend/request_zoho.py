import requests
import pandas as pd
import logging
import os
import re
import json
import numpy as np
from bs4 import BeautifulSoup

#Getting the Code

#response_type=code                                 : The response type(default: code)
#client_id=1000.A3J98K1ZXAO1QHG3IP3QCEBKPP5LYM      : Client-ID, generated by the user
#scope=Desk.tickets.READ                             : The scope of the request
#https://accounts.zoho.in/oauth/v2/auth?response_type=code&client_id=1000.H8U3OC2MZZNWYBTVI37HKTVHZQL2BH&scope=Desk.tickets.READ&redirect_uri=http://127.0.0.1:5000/zoho/oauth/&state=randomstring123

def parse_html_data(html_text):
    soup = BeautifulSoup(html_text, "html.parser")
    #Parse Data
    text = soup.get_text()

    return (text)

def get_access_token(access_code):
    url = "https://accounts.zoho.in/oauth/v2/token"

    #Redirect URL can be an api or localhost for testing purposes
    #Client_id and client_secret are gotten from the user itself
    params = {
        "code": access_code,
        "grant_type": "authorization_code",
        "client_id": "1000.H8U3OC2MZZNWYBTVI37HKTVHZQL2BH",
        "client_secret": "c365e13ef588726e4af332c0faf7b82b9e1f298d48",
        "redirect_uri": "http://127.0.0.1:5000/zoho/oauth/"
    }

    response = requests.post(url, params=params)
    if response.status_code >= 200 and response.status_code <= 299:
        return response.json().get('access_token')


#From the Reponse, the Access code is retrieved.
#Access Token: 1000.87a1d88ba33d61c549c4411d441d6931.5f6832b52f7f483885683f0f64e68d3d


def get_ticket_ids(access_token,org_id=None,page=0):
    url = "https://desk.zoho.in/api/v1/tickets"

    params = {
        "from": 1+(page*100),
        "limit": 100
    }

    #Finally making the api call
    headers = {
        "Authorization": f"Zoho-oauthtoken {access_token}"
    }

    #Can Specify Organization ID if multiple are used
    if(org_id):
        headers["orgId"] = org_id

    response = requests.get(url, headers=headers, params=params)

    return response.json()

def get_latest_thread(access_token,ticket_id,org_id=None,page=0,limit=100):
    url = f"https://desk.zoho.in/api/v1/tickets/{ticket_id}/latestThread"

    #Finally making the api call
    headers = {
        "Authorization": f"Zoho-oauthtoken {access_token}"
    }

    #Can Specify Organization ID if multiple are used
    if(org_id):
        headers["orgId"] = org_id

    response = requests.get(url, headers=headers)
    return response.json().get('content')

if __name__ == '__main__':
    access_token = "1000.a101d523eb43de2283663f281a63acac.9741ceeecde91f63581687d0d0a444b4"
    #ticket_id = "109565000021953301"

    #Fetching all the Ticket Ids, Simply Pass in the Range
    """
    for i in range(0,5):
        ticket_data = get_ticket_ids(access_token,page=i)
        #logging.info(ticket_data)
        df = pd.DataFrame(ticket_data['data']).iloc[:,0:2]
        #logging.info(f"Ticket Data:\n{df.head()}")
        df.to_csv('ticket_number_zoho.csv', index=False, mode='a', header=not pd.io.common.file_exists('ticket_data_zoho.csv'))
    """
        
    #Fetch Latest Thread
    df = pd.read_csv('ticket_number_zoho.csv')
    ticket_id = "109565000022021479"
    #df.iloc[np.random.choice(len(df)),0]
    print(ticket_id)
    
    thread = get_latest_thread(access_token,str(ticket_id))
    with open('latest_thread.txt', 'w', encoding='utf-8') as f:
        f.write(parse_html_data(thread))